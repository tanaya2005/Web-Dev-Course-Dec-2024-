Install Tailwind CSS
Run the following command to install tailwindcss, postcss, and autoprefixer:
-
npm install -D tailwindcss postcss autoprefixer
-

Then generate the Tailwind configuration files:
-
npx tailwindcss init
-


3. Configure tailwind.config.js
Open the tailwind.config.js file and configure the content array to include all files where Tailwind classes will be used:

javascript
-
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
};

-



4. Create postcss.config.js
Create a postcss.config.js file in your project root if it doesn’t already exist:

For ES Modules (if "type": "module" is in your package.json):
javascript
-
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};
-

For CommonJS:
If you don’t use ES modules, the syntax would be:

javascript
-
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};
-



5. Add Tailwind to Your CSS
In your src/index.css (or create one if it doesn’t exist), add the following:

css
-
@tailwind base;
@tailwind components;
@tailwind utilities;
-


6. Import the CSS in Your Application
Make sure you import the index.css file in your main src/main.jsx file (or equivalent entry point):

javascript
-
import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App";
import "./index.css"; // Import Tailwind CSS

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
-



7. Start Your Development Server
Run the following command to start your Vite development server:
-
npm run dev
-



8. Verify Tailwind Setup
To verify Tailwind is working:

Add a <div> in your App.jsx:

jsx
Copy code
export default function App() {
  return (
    <div className="text-3xl font-bold text-blue-500">
      Tailwind CSS is working!
    </div>
  );
}
Start your app in the browser and check if the styles are applied.

